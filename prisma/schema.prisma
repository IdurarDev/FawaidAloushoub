// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Customer {
    id             String         @id @default(uuid())
    email          String         @unique
    name           String?
    plante         Plante[]
    articles       Article[]
    profile        Profile?
    reset_password ResetPassword?
}

model Profile {
    id         String   @id @default(uuid())
    bio        String
    customer   Customer @relation(fields: [customerId], references: [id])
    customerId String   @unique
}

model Plante {
    id               String           @id @default(uuid())
    title            String           @unique
    author           Customer         @relation(fields: [authorId], references: [id])
    authorId         String
    categoriesPlante CategoryPlante[]
    description      String?
    utilisation      String?
    difficultyLevel  String?
    create_at        DateTime         @default(now())
    updated_at       DateTime         @updatedAt
}

model CategoryPlante {
    id         String  @id @default(uuid())
    name       String
    category   Plante? @relation(fields: [categoryId], references: [id])
    categoryId String
}

model Article {
    id         String    @id @default(uuid())
    title      String
    published  Boolean   @default(false)
    author     Customer  @relation(fields: [authorId], references: [id])
    authorId   String
    create_at  DateTime  @default(now())
    updated_at DateTime  @updatedAt
    Comment    Comment[]
}

model Blog {
    id         String    @id @default(uuid())
    name       String    @unique
    create_at  DateTime  @default(now())
    updated_at DateTime  @updatedAt
    Comment    Comment[]
}

model Comment {
    id        String  @id @default(uuid())
    article   Article @relation(fields: [articleId], references: [id])
    articleId String
    blog      Blog    @relation(fields: [blogId], references: [id])
    blogId    String
    comment   String
}

model CategoriesArticle {
    id         String   @id @default(uuid())
    name       String   @unique
    create_at  DateTime @default(now())
    updated_at DateTime @updatedAt
}

model CategoriesBlog {
    id         String   @id @default(uuid())
    name       String   @unique
    create_at  DateTime @default(now())
    updated_at DateTime @updatedAt
}

model ResetPassword {
    id         String   @id @default(uuid())
    customer   Customer @relation(fields: [customerId], references: [id])
    customerId String   @unique
    create_at  DateTime @default(now())
}
